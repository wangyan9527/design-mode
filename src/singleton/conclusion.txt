单例模式的意义：

确保一个类最多只有一个实例，并提供一个全局访问点

可通过静态变量方式来实现

注意：单例模式需要注意多线程问题
优化：
1.同步(synchronized) getInstance方法,效率较低
2.饿汉模式,在类初始化时就创建单例。这样如果这个单例没有被使用，则会影响内存
3.双重检查加锁(使用volatile关键字修饰单例对象,在创建单例对象前使用synchronized关键字防止多线程问题,
    这样可以解决效率问题,但是volatile也有一些性能问题)
4.使用静态内部类的方式,这样可以使得单例对象延迟加载,也可以通过jvm来保证线程安全问题
5.使用枚举类来实现单例